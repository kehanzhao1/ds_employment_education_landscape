{
  "version": 3,
  "sources": ["../../d3-hexbin/src/hexbin.js"],
  "sourcesContent": ["var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n"],
  "mappings": "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",
  "names": ["x0", "y0", "x1", "y1", "dx", "dy", "y", "x"]
}
